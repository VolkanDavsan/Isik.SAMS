@using Isik.SAMS.Models.Entity
@using GridMvc.Html
@model List<SAMS_StudentApplications>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (ViewBag.Message != null)
{
    <div class="col-12">
        <div class="pull-right">
            <div class="alert @ViewBag.MessageClass alert-dismissible fade show pull-right" role="alert">
                <b>@ViewBag.Message </b>
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        </div>
    </div>
}

<style>
    .clearfix {
        margin-bottom: 3px !important;
    }
</style>
<div class="col-md-2">
    <h5>Approval Status </h5>
    <ul class="folder-list m-b-md" style="padding: 0">
        <li class="clearfix">
            <a data-switch="radio" data-category="1" href="/Application">
                <i class="text-info icon-list"></i> All
                <span class="badge badge-info pull-right m-l-md  m-t-xs">
                    @Model.Count()
                </span>
            </a>
        </li>
        <li class="clearfix">
            <a data-switch="radio" data-category="1" href="/Application?grid-filter=StatusName__1__Waiting%20for%20approval">
                <i class="text-warning icon-spinner"></i> Waiting For Approval
                <span class="badge badge-warning pull-right m-l-md  m-t-xs">
                    @Model.Where(x => x.Status == 1).Count()
                </span>
            </a>
        </li>
        <li class="clearfix">
            <a data-switch="radio" data-category="1" href="/Application?grid-filter=StatusName__1__Waiting%20for%20additional%20files">
                <i class="text-warning icon-spinner"></i> Waiting For Additional Files
                <span class="badge badge-warning pull-right m-l-md  m-t-xs">
                    @Model.Where(x => x.Status == 3).Count()
                </span>
            </a>
        </li>
        <li class="clearfix">
            <a data-switch="radio" data-category="1" href="/Application?grid-filter=StatusName__1__Waiting%20for%20the%20Payment">
                <i class="text-warning icon-hourglass"></i> Waiting for the Payment
                <span class="badge badge-warning pull-right m-l-md  m-t-xs">
                    @Model.Where(x => x.Status == 7).Count()
                </span>
            </a>
        </li>
        <li class="clearfix">
            <a data-switch="radio" data-category="1" href="/Application?grid-filter=StatusName__1__Approved%20by%20secretary">
                <i class="text-success icon-thumbs-up"></i> Approved by Secretary
                <span class="badge badge-success pull-right m-l-md  m-t-xs">
                    @Model.Where(x => x.Status == 2).Count()
                </span>
            </a>
        </li>

        <li class="clearfix">
            <a data-switch="radio" data-category="1" href="/Application?grid-filter=StatusName__1__Approved%20by%20Head%20of%20Department">
                <i class="text-success icon-thumbs-up"></i> Approved by Department
                <span class="badge badge-success pull-right m-l-md  m-t-xs">
                    @Model.Where(x => x.Status == 4).Count()
                </span>
            </a>
        </li>
        <li class="clearfix">
            <a data-switch="radio" data-category="1" href="/Application?grid-filter=StatusName__1__Payment%20Received">
                <i class="text-success icon-money"></i> Payment Received
                <span class="badge badge-success pull-right m-l-md  m-t-xs">
                    @Model.Where(x => x.Status == 9).Count()
                </span>
            </a>
        </li>
        <li class="clearfix">
            <a data-switch="radio" data-category="1" href="/Application?grid-filter=StatusName__1__Enrolled">
                <i class="text-success icon-ok"></i> Enrolled
                <span class="badge badge-success pull-right m-l-md  m-t-xs">
                    @Model.Where(x => x.Status == 6).Count()
                </span>
            </a>
        </li>
        <li class="clearfix">
            <a data-switch="radio" data-category="1" href="/Application?grid-filter=StatusName__1__Rejected">
                <i class="text-danger icon-cancel"></i> Rejected
                <span class="badge badge-danger pull-right m-l-md  m-t-xs">
                    @Model.Where(x => x.Status == 5).Count()
                </span>
            </a>
        </li>
    </ul>
</div>
<div class="col-10">
    <div class="statbox widget box box-shadow">
        <div class="widget-header">
            <div class="row">
                <div class="col-xl-8 col-md-8 col-sm-8 col-8">
                    <h4>Application List</h4>
                </div>
            </div>
        </div>
        <div class="widget-content widget-content-area">
            @Html.Grid(Model).Columns(columns =>
       {
       columns.Add(c => c.Email).Titled("E-mail");
       columns.Add(c => c.StudentFirstName).Titled("First Name");
       columns.Add(c => c.StudentLastName).Titled("Last Name");
       columns.Add(c => c.approvedByName).Titled("Approved Person");
       columns.Add(c => c.enrolledByName).Titled("Enrolled Person");
       columns.Add(c => c.CreatedTime).Titled("Application Date");
       columns.Add(c => c.StatusName).Titled("Status").Sanitized(false).Encoded(false).RenderValueAs(c => @<text>
                    <text style="color:@(c.Status == 1 || c.Status == 3 || c.Status == 7 ? "darkorange" : c.Status == 2 || c.Status == 4 || c.Status == 6 || c.Status == 9 ? "green" : c.Status == 5 ? "red" : "blue"); font-weight:bold;">@c.StatusName</text></text>);
columns.Add()
.Titled("")
.Filterable(true)
.Sanitized(false)
.Encoded(false)
.RenderValueAs(c => @<text>
    <a href="" style="margin-left:15px; border:none;" class="icon-eye-1" data-task="Insert" data-modal="false" data-method="GET" data-href="@Url.Action("Detail","Application", new {id = c.Id})"></a></text>);
}).WithPaging(10).Sortable(true).Filterable(true).EmptyText("There is no data available.")
        </div>
    </div>
</div>

<script>
    setTimeout(function () {
        $(".alert").alert('close');
        //....and whatever else you need to do
    }, 3000);
</script>